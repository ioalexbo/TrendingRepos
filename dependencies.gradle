ext {
    //Android Core
    compileSdkVersion = 29
    targetSdkVersion = 29
    minSdkVersion = 21
    buildToolsVersion = "29.0.2"
    versionCode = 1
    versionName = "1.0"
    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"

    //Dependencies Version - Presentation
    appcompatVersion = '1.2.0'
    androidxCoreKtxVersion = '1.2.0'
    constraintLayoutVersion = '2.0.1'
    fragmentKtxVersion = '1.2.5'
    recyclerVersion = '1.2.0-alpha03'
    flexboxVersion = '2.0.1'
    materialVersion = '1.2.0'
    lifecycleExtensionsVersion = '2.2.0'
    multidexVersion = "2.0.1"

    //Data
    rxJavaVersion = '2.2.19'
    rxAndroidVersion = '2.1.1'
    lifecycleVersion = "2.2.0"
    roomVersion = '2.2.5'
    squareRetrofit = '2.5.0'
    retrofitVersion = '2.7.0'
    loggingInterceptorVersion = '4.2.1'

    //Testing
    junitVersion = '4.12'
    mockitoVersion = '2.25.0'
    nhaarmanMockitoVersion = '1.6.0'
    hamcrestVersion = '1.3'
    archCoreTesting = '2.1.0'
    mockWebServerVersion = '4.2.1'

    //App/Presentation Layer
    appDependencies = [
            kotlin                 : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxJava                 : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            rxAndroid              : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",

            appCompat              : "androidx.appcompat:appcompat:$appcompatVersion",
            androidxKtx            : "androidx.core:core-ktx:$androidxCoreKtxVersion",
            constraintLayout       : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            fragmentKtx            : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
            recyclerview           : "androidx.recyclerview:recyclerview:$recyclerVersion",
            lifecycle              : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
            flexbox                : "com.google.android:flexbox:$flexboxVersion",
            material               : "com.google.android.material:material:$materialVersion",
            lifecycleExtensions    : "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion",
            lifecycleViewModel     : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleExtensionsVersion",
            multidex               : "androidx.multidex:multidex:$multidexVersion",
            room                  : "androidx.room:room-runtime:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",
            retrofit              : "com.squareup.retrofit2:retrofit:$squareRetrofit",
    ]

    dataDependencies = [
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxJava            : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            retrofit              : "com.squareup.retrofit2:retrofit:$squareRetrofit",
            retrofitRxJava2Adapter: "com.squareup.retrofit2:adapter-rxjava2:$squareRetrofit",
            retrofitGsonConverter : "com.squareup.retrofit2:converter-gson:$squareRetrofit",
            okhttpLogging         : "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion",
            room                  : "androidx.room:room-runtime:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",
            roomRxJava            : "androidx.room:room-rxjava2:$roomVersion",
    ]

    domainDependencies = [
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxJava            : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            retrofitGsonConverter : "com.squareup.retrofit2:converter-gson:$squareRetrofit",
    ]

    testDependencies = [
//            junit            : "junit:junit:$junitVersion",
//            androidxJunit    : "androidx.test.ext:junit:$androidxJunitVersion",
//            runner           : "androidx.test:runner:$runnerVersion",
//            mockito          : "org.mockito:mockito-core:$mockitoVersion",
//            googleTruth      : "com.google.truth:truth:$truthVersion",
//            mockitoInline    : "org.mockito:mockito-inline:$mockitoInlineVersion",
//            mockWebServer    : "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion",
//            androidxCoreTest : "androidx.test:core:$androidxTestCoreVersion",
//            rules            : "androidx.test:rules:$rulesVersion",
//            archComponentTest: "androidx.arch.core:core-testing:$archComponentTestVersion",
    ]
}